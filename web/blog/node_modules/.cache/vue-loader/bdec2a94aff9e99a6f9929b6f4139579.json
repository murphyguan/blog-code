{"remainingRequest":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JAVA\\blog\\blog-code\\web\\blog\\src\\views\\about\\About.vue?vue&type=style&index=0&id=34e1b0c1&scoped=true&lang=css&","dependencies":[{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\src\\views\\about\\About.vue","mtime":1713440622000},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1728701077420},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1728701077953},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1728701077446},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1728701077859},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728701076490},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1728701077734}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFib3V0LWNvbnRlbnQgewogIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7CiAgbGluZS1oZWlnaHQ6IDEuODsKICBmb250LXNpemU6IDE0cHg7Cn0KLm15LXdyYXBwZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYXV0aG9yLWF2YXRhciB7CiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7Cn0KLmF1dGhvci1hdmF0YXI6aG92ZXIgewogIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Cn0K"},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views/about","sourcesContent":["<template>\n  <div>\n    <!-- banner -->\n    <div class=\"banner\" :style=\"cover\">\n      <h1 class=\"banner-title\">关于我</h1>\n    </div>\n    <!-- 关于我内容 -->\n    <v-card class=\"blog-container\">\n      <!-- 博主头像 -->\n      <div class=\"my-wrapper\">\n        <v-avatar size=\"110\">\n          <img class=\"author-avatar\" :src=\"avatar\" />\n        </v-avatar>\n      </div>\n      <!-- 介绍 -->\n      <div\n        ref=\"about\"\n        class=\"about-content markdown-body\"\n        v-html=\"aboutContent\"\n      />\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport Clipboard from \"clipboard\";\nexport default {\n  created() {\n    this.getAboutContent();\n  },\n  destroyed() {\n    this.clipboard.destroy();\n  },\n  data: function() {\n    return {\n      aboutContent: \"\",\n      clipboard: null,\n      imgList: []\n    };\n  },\n  methods: {\n    getAboutContent() {\n      const that = this;\n      this.axios.get(\"/api/about\").then(({ data }) => {\n        this.markdownToHtml(data);\n        this.$nextTick(() => {\n          // 添加代码复制功能\n          this.clipboard = new Clipboard(\".copy-btn\");\n          this.clipboard.on(\"success\", () => {\n            this.$toast({ type: \"success\", message: \"复制成功\" });\n          });\n          // 添加图片预览功能\n          const imgList = this.$refs.about.getElementsByTagName(\"img\");\n          for (var i = 0; i < imgList.length; i++) {\n            this.imgList.push(imgList[i].src);\n            imgList[i].addEventListener(\"click\", function(e) {\n              that.previewImg(e.target.currentSrc);\n            });\n          }\n        });\n      });\n    },\n    markdownToHtml(data) {\n      const MarkdownIt = require(\"markdown-it\");\n      const hljs = require(\"highlight.js\");\n      const md = new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        highlight: function(str, lang) {\n          // 当前时间加随机数生成唯一的id标识\n          var d = new Date().getTime();\n          if (\n            window.performance &&\n            typeof window.performance.now === \"function\"\n          ) {\n            d += performance.now();\n          }\n          const codeIndex = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n            /[xy]/g,\n            function(c) {\n              var r = (d + Math.random() * 16) % 16 | 0;\n              d = Math.floor(d / 16);\n              return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n            }\n          );\n          // 复制功能主要使用的是 clipboard.js\n          let html = `<button class=\"copy-btn iconfont iconfuzhi\" type=\"button\" data-clipboard-action=\"copy\" data-clipboard-target=\"#copy${codeIndex}\"></button>`;\n          const linesLength = str.split(/\\n/).length - 1;\n          // 生成行号\n          let linesNum = '<span aria-hidden=\"true\" class=\"line-numbers-rows\">';\n          for (let index = 0; index < linesLength; index++) {\n            linesNum = linesNum + \"<span></span>\";\n          }\n          linesNum += \"</span>\";\n          if (lang && hljs.getLanguage(lang)) {\n            // highlight.js 高亮代码\n            const preCode = hljs.highlight(lang, str, true).value;\n            html = html + preCode;\n            if (linesLength) {\n              html += '<b class=\"name\">' + lang + \"</b>\";\n            }\n            // 将代码包裹在 textarea 中，由于防止textarea渲染出现问题，这里将 \"<\" 用 \"<\" 代替，不影响复制功能\n            return `<pre class=\"hljs\"><code>${html}</code>${linesNum}</pre><textarea style=\"position: absolute;top: -9999px;left: -9999px;z-index: -9999;\" id=\"copy${codeIndex}\">${str.replace(\n              /<\\/textarea>/g,\n              \"</textarea>\"\n            )}</textarea>`;\n          }\n        }\n      });\n      // 将markdown替换为html标签\n      this.aboutContent = md.render(data.data);\n    },\n    previewImg(img) {\n      this.$imagePreview({\n        images: this.imgList,\n        index: this.imgList.indexOf(img)\n      });\n    }\n  },\n  computed: {\n    avatar() {\n      return this.$store.state.blogInfo.websiteConfig.websiteAvatar;\n    },\n    cover() {\n      var cover = \"\";\n      this.$store.state.blogInfo.pageList.forEach(item => {\n        if (item.pageLabel == \"about\") {\n          cover = item.pageCover;\n        }\n      });\n      return \"background: url(\" + cover + \") center center / cover no-repeat\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.about-content {\n  word-break: break-word;\n  line-height: 1.8;\n  font-size: 14px;\n}\n.my-wrapper {\n  text-align: center;\n}\n.author-avatar {\n  transition: all 0.5s;\n}\n.author-avatar:hover {\n  transform: rotate(360deg);\n}\n</style>\n\n<style lang=\"scss\">\npre.hljs {\n  padding: 12px 2px 12px 40px !important;\n  border-radius: 5px !important;\n  position: relative;\n  font-size: 14px !important;\n  line-height: 22px !important;\n  overflow: hidden !important;\n  &:hover .copy-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  code {\n    display: block !important;\n    margin: 0 10px !important;\n    overflow-x: auto !important;\n    &::-webkit-scrollbar {\n      z-index: 11;\n      width: 6px;\n    }\n    &::-webkit-scrollbar:horizontal {\n      height: 6px;\n    }\n    &::-webkit-scrollbar-thumb {\n      border-radius: 5px;\n      width: 6px;\n      background: #666;\n    }\n    &::-webkit-scrollbar-corner,\n    &::-webkit-scrollbar-track {\n      background: #1e1e1e;\n    }\n    &::-webkit-scrollbar-track-piece {\n      background: #1e1e1e;\n      width: 6px;\n    }\n  }\n  .line-numbers-rows {\n    position: absolute;\n    pointer-events: none;\n    top: 12px;\n    bottom: 12px;\n    left: 0;\n    font-size: 100%;\n    width: 40px;\n    text-align: center;\n    letter-spacing: -1px;\n    border-right: 1px solid rgba(0, 0, 0, 0.66);\n    user-select: none;\n    counter-reset: linenumber;\n    span {\n      pointer-events: none;\n      display: block;\n      counter-increment: linenumber;\n      &:before {\n        content: counter(linenumber);\n        color: #999;\n        display: block;\n        text-align: center;\n      }\n    }\n  }\n  b.name {\n    position: absolute;\n    top: 7px;\n    right: 45px;\n    z-index: 1;\n    color: #999;\n    pointer-events: none;\n  }\n  .copy-btn {\n    position: absolute;\n    top: 6px;\n    right: 6px;\n    z-index: 1;\n    color: #ccc;\n    background-color: #525252;\n    border-radius: 6px;\n    display: none;\n    font-size: 14px;\n    width: 32px;\n    height: 24px;\n    outline: none;\n  }\n}\n</style>\n"]}]}