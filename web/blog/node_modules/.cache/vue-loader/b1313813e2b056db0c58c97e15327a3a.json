{"remainingRequest":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JAVA\\blog\\blog-code\\web\\blog\\src\\components\\Reply.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\src\\components\\Reply.vue","mtime":1713440622000},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728701076490},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1728701077185},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1728701077859},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728701076490},{"path":"E:\\JAVA\\blog\\blog-code\\web\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1728701077734}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbW9qaSBmcm9tICIuL0Vtb2ppIjsKaW1wb3J0IEVtb2ppTGlzdCBmcm9tICIuLi9hc3NldHMvanMvZW1vamkiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRW1vamkKICB9LAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5kZXg6IDAsCiAgICAgIGNob29zZUVtb2ppOiBmYWxzZSwKICAgICAgbmlja25hbWU6ICIiLAogICAgICByZXBseVVzZXJJZDogbnVsbCwKICAgICAgcGFyZW50SWQ6IG51bGwsCiAgICAgIGNvbW1lbnRDb250ZW50OiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNhbmNsZVJlcGx5KCkgewogICAgICB0aGlzLiRyZWZzLnJlcGx5LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9LAogICAgaW5zZXJ0UmVwbHkoKSB7CiAgICAgIC8v5Yik5pat55m75b2VCiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUudXNlcklkKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUubG9naW5GbGFnID0gdHJ1ZTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuY29tbWVudENvbnRlbnQudHJpbSgpID09ICIiKSB7CiAgICAgICAgdGhpcy4kdG9hc3QoeyB0eXBlOiAiZXJyb3IiLCBtZXNzYWdlOiAi5Zue5aSN5LiN6IO95Li656m6IiB9KTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgLy/op6PmnpDooajmg4UKICAgICAgdmFyIHJlZyA9IC9cWy4rP1xdL2c7CiAgICAgIHRoaXMuY29tbWVudENvbnRlbnQgPSB0aGlzLmNvbW1lbnRDb250ZW50LnJlcGxhY2UocmVnLCBmdW5jdGlvbihzdHIpIHsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgIjxpbWcgc3JjPSAnIiArCiAgICAgICAgICBFbW9qaUxpc3Rbc3RyXSArCiAgICAgICAgICAiJyB3aWR0aD0nMjInaGVpZ2h0PScyMCcgc3R5bGU9J3BhZGRpbmc6IDAgMXB4Jy8+IgogICAgICAgICk7CiAgICAgIH0pOwogICAgICBjb25zdCBwYXRoID0gdGhpcy4kcm91dGUucGF0aDsKICAgICAgY29uc3QgYXJyID0gcGF0aC5zcGxpdCgiLyIpOwogICAgICB2YXIgY29tbWVudCA9IHsKICAgICAgICBhcnRpY2xlSWQ6IGFyclsyXSwKICAgICAgICByZXBseVVzZXJJZDogdGhpcy5yZXBseVVzZXJJZCwKICAgICAgICBwYXJlbnRJZDogdGhpcy5wYXJlbnRJZCwKICAgICAgICBjb21tZW50Q29udGVudDogdGhpcy5jb21tZW50Q29udGVudAogICAgICB9OwogICAgICB0aGlzLmNvbW1lbnRDb250ZW50ID0gIiI7CiAgICAgIHRoaXMuYXhpb3MucG9zdCgiL2FwaS9jb21tZW50cyIsIGNvbW1lbnQpLnRoZW4oKHsgZGF0YSB9KSA9PiB7CiAgICAgICAgaWYgKGRhdGEuZmxhZykgewogICAgICAgICAgdGhpcy4kZW1pdCgicmVsb2FkUmVwbHkiLCB0aGlzLmluZGV4KTsKICAgICAgICAgIHRoaXMuJHRvYXN0KHsgdHlwZTogInN1Y2Nlc3MiLCBtZXNzYWdlOiAi5Zue5aSN5oiQ5YqfIiB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kdG9hc3QoeyB0eXBlOiAiZXJyb3IiLCBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhZGRFbW9qaSh0ZXh0KSB7CiAgICAgIHRoaXMuY29tbWVudENvbnRlbnQgKz0gdGV4dDsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Reply.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reply.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"reply-input-wrapper\" style=\"display: none\" ref=\"reply\">\n    <textarea\n      class=\"comment-textarea\"\n      :placeholder=\"'回复 @' + nickname + '：'\"\n      auto-grow\n      dense\n      v-model=\"commentContent\"\n    />\n    <div class=\"emoji-container\">\n      <span\n        :class=\"chooseEmoji ? 'emoji-btn-active' : 'emoji-btn'\"\n        @click=\"chooseEmoji = !chooseEmoji\"\n      >\n        <i class=\"iconfont iconbiaoqing\" />\n      </span>\n      <div style=\"margin-left:auto\">\n        <button @click=\"cancleReply\" class=\"cancle-btn v-comment-btn\">\n          取消\n        </button>\n        <button @click=\"insertReply\" class=\"upload-btn v-comment-btn\">\n          提交\n        </button>\n      </div>\n    </div>\n    <!-- 表情框 -->\n    <emoji @addEmoji=\"addEmoji\" :chooseEmoji=\"chooseEmoji\"></emoji>\n  </div>\n</template>\n\n<script>\nimport Emoji from \"./Emoji\";\nimport EmojiList from \"../assets/js/emoji\";\nexport default {\n  components: {\n    Emoji\n  },\n  data: function() {\n    return {\n      index: 0,\n      chooseEmoji: false,\n      nickname: \"\",\n      replyUserId: null,\n      parentId: null,\n      commentContent: \"\"\n    };\n  },\n  methods: {\n    cancleReply() {\n      this.$refs.reply.style.display = \"none\";\n    },\n    insertReply() {\n      //判断登录\n      if (!this.$store.state.userId) {\n        this.$store.state.loginFlag = true;\n        return false;\n      }\n      if (this.commentContent.trim() == \"\") {\n        this.$toast({ type: \"error\", message: \"回复不能为空\" });\n        return false;\n      }\n      //解析表情\n      var reg = /\\[.+?\\]/g;\n      this.commentContent = this.commentContent.replace(reg, function(str) {\n        return (\n          \"<img src= '\" +\n          EmojiList[str] +\n          \"' width='22'height='20' style='padding: 0 1px'/>\"\n        );\n      });\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      var comment = {\n        articleId: arr[2],\n        replyUserId: this.replyUserId,\n        parentId: this.parentId,\n        commentContent: this.commentContent\n      };\n      this.commentContent = \"\";\n      this.axios.post(\"/api/comments\", comment).then(({ data }) => {\n        if (data.flag) {\n          this.$emit(\"reloadReply\", this.index);\n          this.$toast({ type: \"success\", message: \"回复成功\" });\n        } else {\n          this.$toast({ type: \"error\", message: data.message });\n        }\n      });\n    },\n    addEmoji(text) {\n      this.commentContent += text;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.reply-input-wrapper {\n  border: 1px solid #90939950;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 0 0 10px;\n}\n</style>\n"]}]}